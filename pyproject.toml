[build-system]
build-backend = "hatchling.build"
requires = [
  "hatch-vcs",
  "hatchling",
]

[project]
name = "backports-httpmethod"
description = "A backport of Python 3.11+ `http.HTTPMethod` enum"
readme = "README.md"
keywords = [
  "backports",
  "enum",
  "http",
  "httpmethod",
]
license.file = "LICENSE"
maintainers = [
  { name = "Edgar Ramírez-Mondragón", email = "edgarrmondragon@hey.com" },
]
authors = [
  { name = "Edgar Ramírez-Mondragón", email = "edgarrmondragon@hey.com" },
]
requires-python = ">=3.7"
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: 3.14",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dynamic = [
  "version",
]
dependencies = [
  "backports-strenum; python_version<'3.11'",
]
urls.Documentation = "https://github.com/edgarrmondragon/backports.httpmethod#readme"
urls.Issues = "https://github.com/edgarrmondragon/backports.httpmethod/issues"
urls.Source = "https://github.com/edgarrmondragon/backports.httpmethod"

[dependency-groups]
dev = [
  { include-group = "lint" },
  { include-group = "typing" },
]
lint = [
  "pyproject-fmt>=0.13.1",
  "ruff>=0.13.3",
]
typing = [
  "mypy>=1.0.0",
]

[tool.hatch.build.targets.wheel]
packages = [
  "src/backports",
]

[tool.hatch.version]
source = "vcs"

[tool.ruff]
line-length = 120
preview = true

lint.select = [
  "A",
  "ARG",
  "B",
  "C",
  "COM",
  "DTZ",
  "E",
  "EM",
  "F",
  "FBT",
  "I",
  "ICN",
  "ISC",
  "N",
  "PLC",
  "PLE",
  "PLR",
  "PLW",
  "Q",
  "RUF",
  "S",
  "T",
  "TID",
  "UP",
  "W",
  "YTT",
]
lint.ignore = [
  # Conflict with the Ruff formatter
  "COM812",
  "ISC001",
]

lint.unfixable = [
  # Don't touch unused imports
  "F401",
]
lint.flake8-tidy-imports.ban-relative-imports = "all"

[tool.pyproject-fmt]
indent = 2
keep_full_version = true
max_supported_python = "3.14"

[tool.coverage.report]
exclude_also = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.tox]
min_version = "4.22"
env_list = [
  "lint",
  "typing",
  "3.7",
  "3.8",
  "3.9",
  "3.10",
  "3.11",
  "3.12",
  "3.13",
  "3.14",
  "pypy",
]

[tool.tox.env_run_base]
description = "unit tests"
commands = [
  [
    "python",
    "-Im",
    "unittest",
  ],
]

[tool.tox.env.lint]
description = "lint"
labels = [ "lint" ]
dependency_groups = [
  "lint",
]
commands = [
  [ "pyproject-fmt", "pyproject.toml" ],
  [ "ruff", "check", { replace = "posargs", default = [  ], extend = true } ],
  [ "ruff", "format", { replace = "posargs", default = [  ], extend = true } ],
]

[tool.tox.env.typing]
description = "type check"
labels = [ "lint" ]
dependency_groups = [
  "typing",
]
commands = [
  [
    "mypy",
    "--install-types",
    "--non-interactive",
    "--explicit-package-bases",
    { replace = "posargs", default = [
      "src/backports/httpmethod",
      "tests",
    ], extend = true },
  ],
]

[tool.mypy]
mypy_path = "src"
